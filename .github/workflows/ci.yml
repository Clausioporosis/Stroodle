name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        env:
          MONGO_INITDB_DATABASE: StroodleDatabase
        options: >-
          --health-cmd "echo 'db.runCommand({ping: 1})' | mongo localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    strategy:
      matrix:
        java-version: [17] 

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Install backend dependencies
      working-directory: backend
      run: mvn install -DskipTests

    - name: Test backend
      working-directory: backend
      run: mvn test

    - name: Package backend
      working-directory: backend
      run: mvn package

    - name: Run Docker Compose for MongoDB
      run: |
        docker-compose -f docker-compose.yml up -d mongo

    - name: Integration tests
      working-directory: backend
      run: mvn verify

    - name: Tear down Docker Compose
      run: docker-compose -f docker-compose.yml down
